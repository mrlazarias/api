version: "3.8"

services:
  app:
    build:
      context: .
      dockerfile: Containerfile
      target: development
    container_name: robust-api-app
    restart: unless-stopped
    working_dir: /var/www/html
    volumes:
      - ./:/var/www/html
      - ./docker/php/local.ini:/usr/local/etc/php/conf.d/local.ini
    networks:
      - robust-api-network
    environment:
      - APP_ENV=development
      - DB_HOST=mysql
      - REDIS_HOST=redis
    depends_on:
      - mysql
      - redis

  nginx:
    image: nginx:alpine
    container_name: robust-api-nginx
    restart: unless-stopped
    ports:
      - "8000:80"
    volumes:
      - ./:/var/www/html
      - ./docker/nginx/default.conf:/etc/nginx/conf.d/default.conf
    networks:
      - robust-api-network
    depends_on:
      - app

  mysql:
    image: mysql:8.0
    container_name: robust-api-mysql
    restart: unless-stopped
    environment:
      MYSQL_DATABASE: robust_api
      MYSQL_ROOT_PASSWORD: root
      MYSQL_PASSWORD: password
      MYSQL_USER: user
    volumes:
      - mysql_data:/var/lib/mysql
      - ./docker/mysql/init.sql:/docker-entrypoint-initdb.d/init.sql
    ports:
      - "3306:3306"
    networks:
      - robust-api-network

  redis:
    image: redis:7-alpine
    container_name: robust-api-redis
    restart: unless-stopped
    ports:
      - "6379:6379"
    volumes:
      - redis_data:/data
    networks:
      - robust-api-network
    command: redis-server --appendonly yes --requirepass ""

  phpmyadmin:
    image: phpmyadmin/phpmyadmin
    container_name: robust-api-phpmyadmin
    restart: unless-stopped
    environment:
      PMA_HOST: mysql
      PMA_PORT: 3306
      PMA_ARBITRARY: 1
    ports:
      - "8080:80"
    networks:
      - robust-api-network
    depends_on:
      - mysql

  mailhog:
    image: mailhog/mailhog
    container_name: robust-api-mailhog
    restart: unless-stopped
    ports:
      - "1025:1025"
      - "8025:8025"
    networks:
      - robust-api-network

volumes:
  mysql_data:
    driver: local
  redis_data:
    driver: local

networks:
  robust-api-network:
    driver: bridge
